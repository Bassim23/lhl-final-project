<!---

<p id="notice"><%= notice %></p>

<h1>Trip <%= @trip.id%></h1>

<table class ="table">
 <thead class="thead-default">
    <tr >
      <th>
        Trip Name
      </th>
      <th>
        Trip Summary
      </th>
      <th>
        Trip Kind
      </th>
      <th>
        Host First Name
      </th>
      <th>
        Host Last Name
      </th>
      <th>
        Trip Delete Link
      </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>
        <%= @trip.name%>
      </td>
      <td>
        <%= @trip.summary%>
      </td>
      <td>
        <%= @trip.kind%>
      </td>
      <td>
        <%= @trip.user.first_name%>
      </td>
      <td>
        <%= @trip.user.last_name%>
      </td>
      <td>
        <%= link_to 'Destroy', @trip, method: :delete, data: { confirm: 'Are you sure?' } %>
      </td>
    </tr>
  </tbody>
</table>

<table class="table table-striped">
  <thead>
    <tr>
      <th>Schedule ID</th>
      <th>Schedule Date</th>
      <th>Goggle Place Destination</th>
      <th>Schedule Show Link</th>
      <th>Schedule Delete Link</th>
    </tr>
  </thead>
  <tbody>
    <% @trip.schedules.each do |schedule| %>
    <tr>
      <td><%= schedule.id %></td>
      <td><%= schedule.date %></td>
      <td><%= schedule.destination %></td>
      <td><%= link_to 'Show', [@trip, schedule] %></td>
      <td><%= link_to 'Destroy', [@trip, schedule], method: :delete, data: { confirm: 'Are you sure?' } %>
    <tr>
    <% end %>
  </tbody>
</table>

<%= link_to 'Trips', trips_path %>

-->

<main class="container-fluid">
  <header class="page-header">
    <h1><%= @trip.name %></h1>
  </header>
  <section class="container-fluid col-md-4">
    <div id="agendaDay-view">
      <div id="calendar"></div>
    </div>
    <script>
      var schedulesDateArray = [];
      var eventsArray = [];
      <%@trip.schedules.each do |schedule|%>
        schedulesDateArray.push("<%=schedule.date%>");
        <%schedule.activities.each do |activity|%>
          var eventObject = {
            title: "<%=activity.name%>",
            description: "<%=activity.description%>",
            start: "<%=activity.start_time%>",
            end: "<%=activity.end_time%>"
          }
          eventsArray.push(eventObject);
        <%end%>
      <%end%>    
      $(() => {
        $('#calendar').fullCalendar({
          height: 'auto',
          defaultView: 'agendaDay',
          allDaySlot: false,
          allDayText: false,
          minTime: '08:00:00',
          slotEventOverlap: false,
          defaultDate: schedulesDateArray[0],
          editable: false,
          droppable: true,
          scrollTime: '06:00:00',
          eventSources: [
            {
              events: eventsArray,
              color: '#1E90FF'
            }
          ]
        });
      });
    </script>
  </section>

  <section class="container-fluid col-md-8">
    <div id="map"></div>
    <script>
      var map;
      var polylineCoordinates = [];
      var placesArray = [];


      function initMap() {
        var origin = {lat: -33.871, lng: 151.197};
        var map = new google.maps.Map(document.getElementById('map'), {
          center: origin,
          zoom: 11,
          mapTypeId: 'terrain'
        });

        <% @trip.schedules.each do |schedule| %>
         <% schedule.activities.each do |activity| %>
            placesArray.push("<%= activity.place %>");
         <% end %>
        <% end %>

        for (var i=0; i<placesArray.length; i++) {
          var geocoder = new google.maps.Geocoder;
          var infowindow = new google.maps.InfoWindow;
          geocodePlaceId(geocoder, map, infowindow, placesArray[i], i);
        }
     
      }

      function animateCircle(line) {
          var count = 0;
          window.setInterval(function() {
            count = (count + 1) % 200;

            var icons = line.get('icons');
            icons[0].offset = (count / 2) + '%';
            line.set('icons', icons);
        }, 80);
      }

      function geocodePlaceId(geocoder, map, infowindow, placeId, i) {
        var label = (i+1).toString();
        geocoder.geocode({'placeId': placeId}, function(results, status) {
          if (status === 'OK') {
            if (results[0]) {
              map.setZoom(16);
              map.setCenter(results[0].geometry.location);
              var coordinate = {
                'lat': results[0].geometry.location.lat(), 
                'lng': results[0].geometry.location.lng()
              }
              polylineCoordinates.push(coordinate);
              var service = new google.maps.places.PlacesService(map);
              service.getDetails({
                placeId: placeId
              }, function(place, status) {
                if (status === google.maps.places.PlacesServiceStatus.OK) {
                  var marker = new google.maps.Marker({
                    map: map,
                    position: place.geometry.location,
                    animation: google.maps.Animation.DROP,
                    icon: {
                      path: google.maps.SymbolPath.BACKWARD_CLOSED_ARROW,
                      fillOpacity: 1.0,
                      fillColor: '#FF0000',
                      strokeWeight: 2,
                      scale: 12,
                      labelOrigin: new google.maps.Point(0,-2.3)
                    },
                    label: {
                      text: label,
                      fontWeight: 'bold',
                      color: 'white'
                    }
                  });
                  google.maps.event.addListener(marker, 'click', function() {
                    infowindow.setContent('<div><strong>' + place.name + '</strong><br>' +
                      'Place ID: ' + place.place_id + '<br>' +
                      place.formatted_address + '</div>');
                    infowindow.open(map, this);
                  });
                }
              });
              if (i === placesArray.length-1) {
                //initializing line symbol for path animation
                var lineSymbol = {
                 path: google.maps.SymbolPath.CIRCLE,
                 scale: 8,
                 strokeColor: '#FF0000'
                };
                //initializing polyline for drawing trip path
                var tripPath = new google.maps.Polyline({
                  path: polylineCoordinates,
                  geodesic: true,
                  strokeColor: '#1E90FF',
                  strokeOpacity: 0.5,
                  strokeWeight: 4,
                  icons: [{
                    icon: lineSymbol,
                    offset: '100%'
                  }]
                });
               //rendering trip path polyline on map object 
               tripPath.setMap(map);
               //calls the animate function for line symbol
               animateCircle(tripPath);
              }
            } else {
              window.alert('No results found');
            }
          } else {
            window.alert('Geocoder failed due to: ' + status);
          }
        });
      }

    </script>
    <% src = "https://maps.googleapis.com/maps/api/js?key=" + ENV['GOOGLE_API_KEY'].to_s + "&libraries=places&callback=initMap" %>
    <script src=<%=src%> async defer></script>
  </section>
</main>
